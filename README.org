#+TITLE: Wire Cell Exchange Data in ROOT format

This package provides data structures for exchanging data in ROOT format between Wire Cell and other systems.

This package is independent from Wire Cell Toolkit (and Prototype).

* Install

This package uses a custom [[https://waf.io/][waf]] command called =wcb=.  

#+BEGIN_SRC sh
  git clone https://github.com/WireCell/wire-cell-xdata-root.git
  # or git clone git@github.com:WireCell/wire-cell-xdata-root.git
  cd wire-cell-xdata-root/
  ./wcb --prefix=/path/to/install configure build install
#+END_SRC

** For Wire Cell Prototype

To build the [[https://github.com/BNLIF/wire-cell][Wire Cell prototype]] against this package choose =--prefix= to be the same as used to build that package and it will pick it up.

In the prototype, its use can be seen in the [[https://github.com/BNLIF/wire-cell-2dtoy/blob/master/apps/2dtoy-shower3d-xdata.cxx][2dtoy-shower3d-xdata]] app which can convert from an internal data format.

** For Wire Cell Toolkit

t.b.d.

* Overview of data

Top level object is =XdataFile= which helps maintain three main objects that map to =TTree= branches:

- =RunInfo= :: meta information about the DAQ or simulation "run"
- =Geom= :: static geometry information (wires)
- =Image= :: reconstructed image of one readout or "frame"

** Geom

The =Geom= data is (for now) simply a vector of Wire geometry information.  

** Image

The Image data is dynamic in the sense that it spans a "frame" of readout.  It makes reference to the static Geom information.

- =Deco= :: information about deconvoluted waveform information on a given wire in a time slice.

- =Cell= :: geometry information about a 2D cell and its relationships with wire geometry.  Note, this collection of cells is shared through the time slices of the frame but not between frames.  These cells do not contain any charge or other "dynamic" information.

- =Blob= :: an association between a collection of cells, a time slice and some numeric values (eg, charge)

- =Field= :: a collection of =FieldPoint= objects each of which associate a vector of numbers and a 3D point.  Fields have human readable names.

* Status

This section holds some transient status info.

** Conversion of shower3D

The prototype produces a "shower3D" file which should be considered internal and not proliferated.  Its conversion to Wire Cell Xdata ROOT is used as an initial test.  That file contains simple dumps of transient objects that are not well suited to saving directly to ROOT.  This leads to both time and space bloat:

#+BEGIN_EXAMPLE
$ ./build/2dtoy/2dtoy-shower3d-xdata ../shower3D_cluster_22_4.root ../foo.root
Loading 467373 entries of TC
Loading 52415 entries of T_true
Loading 587542 entries of T_rec
Loading 405447 entries of T_rec_charge
shower3d read time: 5.80891s
xdata packing time: 4.5058s
Writing xdata:
	4487 wires
	3734 cells
	16567 blobs
	3 fields
Write xdata in 0.77918s
Test readback:
... in 0.438089s

$ ls -lh ../*.root
-rw-r--r-- 1 bv bv 6.6M Feb  7 13:00 ../foo.root
-rw-rw-r-- 1 bv bv  38M Feb  5 08:45 ../shower3D_cluster_22_4.root
#+END_EXAMPLE

** Work to do

- maybe remove Cell and just store a packing =context|UwireID|VwireID|WwireID=, add cell maker as alg in Xdata
-  move away from =std::vector= in favor of =TClonesArray= to gain I/O speed.
- validate shower3D conversion
- include celltree level information MC (for now shunt TMC in 2dtoy-shower3d-xdata)
- produce Xdata to Bee conversion (Chao)
- add reader/writer nodes to the Wire Cell Toolkit
